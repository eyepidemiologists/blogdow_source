CreateTableOne()
```
## To learn more
- RMarkdown: http://rmarkdown.rstudio.com/
- Examples: https://github.com/yihui/knitr-examples
- More exemples: http://rpubs.com
- knitr: http://yihui.name/knitr/
- http://tinyurl.com/lq3l6oa
<img src="book.jpg" width="300" height="400" />
##  Thanks for your attention
- Slides (in big part) from Yihui Xie
## Take a big breath and go !
>- <img src="https://slides.yihui.name/gif/jump-off.gif" width="800" height="400" />
---
title: "Dynamical Documents \n Introduction to knitr"
author: "Alexandre Vivot (Slides adapted from Yihui Xie)"
date: "24 mars 2017"
output: ioslides_presentation
---
## Congrats !
- You have finished to conduct a study
- Now it is the time for statistical analysis
- You work on your favorite statistical software (SAS / STATA / R)
- You have to write a report on World
- Or Tables in Excel
## Your best friends
- You click, click, copy and paste
- Output from SAS / R / Stata
- C-c / c-v to World / Excel / PowerPoint
![](http://i.imgur.com/tYxVO4w.jpg)
## OK, it is finally finished ! But, ...
- we made a mistake in the data
- We want to change a parameter in the regression
- We've added more patients
![](http://i.imgur.com/9g5M6Hq.gif)
## Your new best friends
- <img src="yihui.png" width="100" height="100" />
- <img src="jupiter.jpg" width="300" height="300" />
## _Litterate Programming_
> Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to
> instruct a computer what to do, let us concentrate rather on explaining to humans what we want the computer to do.
--Donald E. Knuth, Literate Programming, 1984
# knitr
##
- Idea: *one*  document to put all the code + narrative +  output of statistical analysis
- *Dynamic* Reports
- Sweave by Friedrich Leisch en 2002
- R + LateX
- knitr >> Sweave
- Markdown or LateX instead of LateX only
- Easier to use
## The goal of knitr
- You have done the hard work of research, data collection, and analysis, etc.
- We hope the last step can be easier.
>- <img src="http://i.imgur.com/IwhhHY8.gif" width="550" height="300" />
## Let's try !
<img src="http://i.imgur.com/IhbIPtg.gif" width="700" height="400" />
>- Open RStudio
>- File > New File > R Markdown
## You can choose the statistical software
>- R
>- but also, SAS / STATA / Python
>- Awk, Ruby, Haskell, Bash, Perl, Graphviz, TikZ, Scala, CoffeeScript
## You can choose the langage for the narrative and the formating
- Markdown: (too) simple
>- LateX: (too) precise
>- To print or not to print, that is the question
>- LaTeX is very useful for print documents (and some slides)
## R Markdown
<img src="rmarkdown.jpg" width="750" height="500" />
## LateX
- https://en.wikibooks.org/wiki/LaTeX
<img src="latex.jpg" width="750" height="500" />
## You have the choice for the output format
- HTML (slides w/ slidify et ioslides)
- PDF (slides w/ beamer)
- World / Libre Office
# TABLES
## How to format Tables ?
- Descriptive Data (Table 1)
- Regression Tables
- Simple tools with markdown
- More precise (but more complex) with LateX
- We'll see several examples
## Some Data
```{r}
library(MASS)
data(birthwt)
head(birthwt)
```
## A Linear Model
```{r}
lm1 <- lm(bwt ~ lwt, data = birthwt)
summary(lm1)
confint(lm1)
```
## A second one
```{r}
lm2 <- lm(bwt ~ lwt + age + smoke + ui, data = birthwt)
summary(lm2)
confint(lm2)
```
```{r, include = F}
library(stargazer)
```
##
```{r, results='asis', echo = F}
stargazer(list(lm1,lm2), type = "html", title = "",
dep.var.caption = "Poids de naissance", ci = T, digits = 1)
```
## The output (package: stargazer)
```{r, echo = T, results="hide"}
stargazer(list(lm1,lm2), type = "html",
title = "Un trÃ¨s beau Tableau",
dep.var.caption = "Poids de naissance",
ci = T)
```
```{r, include = F}
library(texreg)
```
##
```{r, results='asis', echo = F}
htmlreg(list(lm1, lm2), ci.force = T)
```
## The code to have this table
```{r, results='asis', echo = F}
htmlreg(list(lm1, lm2), ci.force = T)
```
## Advanced Exemples
## Table 1
- Package (tableone)
##
```{r}
library(tableone)
```
```{r}
CreateTableOne()
```
## To learn more
- RMarkdown: http://rmarkdown.rstudio.com/
- Examples: https://github.com/yihui/knitr-examples
- More exemples: http://rpubs.com
- knitr: http://yihui.name/knitr/
- http://tinyurl.com/lq3l6oa
<img src="book.jpg" width="300" height="400" />
##  Thanks for your attention
- Slides (in big part) from Yihui Xie
## Take a big breath and go !
>- <img src="https://slides.yihui.name/gif/jump-off.gif" width="800" height="400" />
birthwt
data(##
```{r, results='asis', echo = F}
htmlreg( list(lm1, lm2), ci.force = T)
```
)
library(MASS)
head(birthwt)
CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"), data = birthwt)
```{r}
tab1 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
data = birthwt)
```
print(tab1, catDigits = 0, contDigits = 1,
showAllLevels = T, nonnormal = "age")
?print.TableOne
tab1 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
tab1
print(tab1, catDigits = 0, contDigits = 1,
showAllLevels = T, nonnormal = "age" )
tab2 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
strata = "low",
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
tab2
print(tab1, catDigits = 0, contDigits = 1,
showAllLevels = T, nonnormal = "age" )
print(tab2, catDigits = 0, contDigits = 1,
showAllLevels = T, nonnormal = "age" )
tab2 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
strata = "low",
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
print(tab2, catDigits = 0, contDigits = 0,
showAllLevels = T, nonnormal = "age" )
c(1034, 618)/0.8
c(1034, 618)/0.5
c(1034, 618)/2
c(1034, 618)/1.7
c(1071, 367)/1.3
c(608, 364) / 0.8
c(955, 578)/1.3
c(1030, 764)/1.3
c(1030, 764)/1.4
c(1030, 764)/1.5
c(1030, 764)/1.6
c(1030, 764)/1.7
c(949, 321)/1.4
```{r}
library(MASS)
data(birthwt)
head(birthwt)
tab1 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
---
title: "Dynamical Documents \n Introduction to knitr"
author: "Alexandre Vivot (Slides adapted from Yihui Xie)"
date: "24 mars 2017"
output: ioslides_presentation
---
```{r, setup, echo = F,  results = "hide", message = F, warning = F}
knitr::opts_chunk$set(message = F, warning = F)
```
## Congrats !
- You have finished to conduct a study
- Now it is the time for statistical analysis
- You work on your favorite statistical software (SAS / STATA / R)
- You have to write a report on World
- Or Tables in Excel
## Yeah, it is finally finished !
- <img src="excel.jpg" width="606" height="450" />
- More than 100 models !!
## My old best friends
- click, click, copy and paste
- Output from SAS / R / Stata
- C-c / c-v to World / Excel / PowerPoint
![](http://i.imgur.com/tYxVO4w.jpg)
##  But, after you finished someone says:
- we made a mistake in the data
- We want to change a parameter in the regression
- We've added more patients
![](http://i.imgur.com/9g5M6Hq.gif)
## My new best friends
- <img src="knitr.jpg" width="677" height="230" />
- <img src="logo_rstudio.png" width="300" height="100" />
# The principle
## _Litterate Programming_
> Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to
> instruct a computer what to do, let us concentrate rather on explaining to humans what we want the computer to do.
--Donald E. Knuth, Literate Programming, 1984
##
- Idea: *one*  document to put all the code + narrative +  output of statistical analysis
- *Dynamic* Reports
- Sweave by Friedrich Leisch en 2002
- R + LateX
- knitr >> Sweave
- Markdown or LateX instead of LateX only
- Easier to use
## The goal of knitr
- You have done the hard work of research, data collection, and analysis, etc.
- We hope the last step can be easier.
- <img src="http://i.imgur.com/IwhhHY8.gif" width="550" height="300" />
## Let's try !
<img src="http://i.imgur.com/IhbIPtg.gif" width="700" height="400" />
>- Open RStudio
>- File > New File > R Markdown
# Flexibility
## You can choose the statistical software
>- R
>- but also, SAS / STATA / Python
>- Awk, Ruby, Haskell, Bash, Perl, Graphviz, TikZ, Scala, CoffeeScript
## You can choose the langage for the narrative and the formating
- Markdown: (too) simple
>- LateX: (too) precise
>- To print or not to print, that is the question
>- LaTeX is very useful for print documents (and some slides)
## R Markdown
<img src="rmarkdown.jpg" width="750" height="500" />
## LateX
- https://en.wikibooks.org/wiki/LaTeX
<img src="latex.jpg" width="750" height="500" />
## You have the choice for the output format
- HTML (slides w/ slidify et ioslides)
- PDF (slides w/ beamer)
- World / Libre Office
# TABLES
## How to format Tables ?
- Descriptive Data (Table 1)
- Regression Tables
- Simple tools with markdown
- More precise (but more complex) with LateX
- We'll see several examples
## Some Data
```{r}
library(MASS)
data(birthwt)
head(birthwt)
```
## A Linear Model
```{r}
lm1 <- lm(bwt ~ lwt, data = birthwt)
summary(lm1)
confint(lm1)
```
## A second one
```{r}
lm2 <- lm(bwt ~ lwt + age + smoke + ui, data = birthwt)
summary(lm2)
confint(lm2)
```
```{r, include = F}
library(stargazer)
```
##
```{r, results='asis', echo = F}
stargazer(list(lm1,lm2), type = "html", title = "",
dep.var.caption = "Poids de naissance", ci = T, digits = 1)
```
## The output
```{r, echo = T, results="hide"}
stargazer(list(lm1,lm2), type = "html",
dep.var.caption = "Poids de naissance",
ci = T)
```
```{r, include = F}
library(texreg)
```
##
```{r, results='asis', echo = F}
htmlreg(list(lm1, lm2), ci.force = T)
```
## The code to have this table
```{r, results='hide', echo = T}
htmlreg(list(lm1, lm2), ci.force = T)
```
## Advanced Example
<img src="extab1.jpg" width="823" height="282" />
## Advanced Example
<img src="extab2.jpg" width="760" height="455" />
## Advanced Example
<img src="extab3.jpg" width="734" height="444" />
# Descriptive Tables
```{r, include=F}
library(tableone)
```
## Package tableone
```{r, echo = F}
tab1 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
tab1
```
## Table 1 (the code)
```{r, echo = T, results="hide"}
tab1 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
tab1
```
## Table 1 (cont'd)
```{r}
print(tab1, catDigits = 0, contDigits = 1,
showAllLevels = T, nonnormal = "age" )
```
## Table 1 with 2 groups
```{r, echo = F}
tab2 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
strata = "low",
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
print(tab2, catDigits = 0, contDigits = 0,
showAllLevels = T, nonnormal = "age" )
```
## Table 1 with 2 groups (the code)
```{r, echo = T, results="hide"}
tab2 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
strata = "low",
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
print(tab2, catDigits = 0, contDigits = 0,
showAllLevels = T, nonnormal = "age" )
```
# Examples of complete reports
#
## To learn more
- RMarkdown: http://rmarkdown.rstudio.com/
- Examples: https://github.com/yihui/knitr-examples
- More exemples: http://rpubs.com
- knitr: http://yihui.name/knitr/
- http://tinyurl.com/lq3l6oa
<img src="book.jpg" width="300" height="400" />
- https://bookdown.org/yihui/bookdown/
# Thanks for your attention
## Take a big breath and go !
>- <img src="https://slides.yihui.name/gif/jump-off.gif" width="800" height="400" />
tab1 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
tab1
tab2 <- CreateTableOne( vars = c("age", "bwt", "smoke", "ptl", "ht"),
strata = "low",
factorVars = c("smoke", "ptl", "ht"),
data = birthwt)
print(tab2, catDigits = 0, contDigits = 0,
showAllLevels = T, nonnormal = "age",
exact = c("ptl", "ht"))
plot(cars)
numbers <- list(11, 12, 13, 14)
lapply(numbers, sqrt)
sapply(numbers, sqrt)
library(blogdown)
library(blogdown)
library(blogdown)
setwd("~/../EYE")
build_site()
setwd("~/../EYE/blogdown_source/")
build_site()
serve_site()
build_site()
serve_site()
serve_site()
new_post("bonjour", rmd = T)
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
dir(dir())
dir()
setwd("~/../Temp/")
dir()
setwd("~/../Temp/blog/")
new_site(theme = "gcushen/hugo-academic", format = "toml")
setwd("~/../EYE/blogdown_source/")
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
new_post("un emploi", rmd = F)
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
?quit()
stop()
serve_site()
serve_site()
build_site()
serve_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
new_post("PhD in Angers, France", rmd = F)
build_site()
serve_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
blogdown:::new_post_addin()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
blogdown:::new_post_addin()
build_site()
serve_site()
